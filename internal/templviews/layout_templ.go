// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package templviews

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Layout(title string, breadcrumbs []breadcrumb) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templviews/layout.templ`, Line: 10, Col: 15}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</title><!-- Using inline styles to avoid dependency on external files --><style>\r\n\t\t:root {\r\n\t\t\t--primary-color: #474747;\r\n\t\t\t--secondary-color: #2c3e50;\r\n\t\t\t--muted-color: #3498db1a;\r\n\t\t\t--background-color: #f7f7f7;\r\n\t\t\t--card-background: #ffffff;\r\n\t\t\t--text-color: #333333;\r\n\r\n\t\t\t--container-size: 150px;\r\n\t\t\t--border-radius: 0px;\r\n\t\t\t--transition-duration: 200ms;\r\n\t\t}\r\n\r\n\t\t* {\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t\tbox-sizing: border-box;\r\n\t\t}\r\n\r\n\t\tbody {\r\n\t\t\tfont-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n\t\t\tbackground-color: var(--background-color);\r\n\t\t\tcolor: var(--text-color);\r\n\t\t\tline-height: 1.6;\r\n\t\t}\r\n\r\n\t\t.container {\r\n\t\t\tmax-width: 1200px;\r\n\t\t\tmargin: 0 auto;\r\n\t\t\tpadding: 2px;\r\n\t\t}\r\n\r\n\t\t.breadcrumb {\r\n\t\t\tpadding: 4px 6px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tbackground-color: var(--card-color);\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t\tfont-size: 20px;\r\n\t\t}\r\n\r\n\t\t.breadcrumb a {\r\n\t\t\tcolor: var(--primary-color);\r\n\t\t\ttext-decoration: none;\r\n\t\t\ttransition: var(--transition-duration);\r\n\t\t}\r\n\r\n\t\t.breadcrumb a:hover {\r\n\t\t\tcolor: var(--secondary-color);\r\n\t\t}\r\n\r\n\t\t.gallery {\r\n\t\t\tdisplay: grid;\r\n\t\t\tgrid-template-columns: repeat(auto-fill, minmax(var(--container-size), 1fr));\r\n\t\t\tgap: 1px;\r\n\t\t}\r\n\r\n\t\t.gallery-item {\r\n\t\t\ttransition-duration: var(--transition-duration);\r\n\t\t\tbackground-color: var(--card-background);\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t\toverflow: hidden;\r\n\t\t\tbox-sizing: content-box;\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: translateY(10px);\r\n\t\t\tborder: 1px solid var(--background-color);\r\n\t\t\tpadding: 1px;\r\n\t\t}\r\n\r\n\t\t.gallery-item-visible {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: translateY(0);\r\n\t\t}\r\n\r\n\t\t.gallery-item:hover {\r\n\t\t\tborder: 1px solid var(--text-color);\r\n\t\t}\r\n\r\n\t\t.gallery-item a {\r\n\t\t\ttext-decoration: none;\r\n\t\t\tcolor: var(--text-color);\r\n\t\t}\r\n\r\n\t\t.gallery-item img {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: var(--container-size);\r\n\t\t\tobject-fit: cover;\r\n\t\t}\r\n\r\n\t\t.gallery-item .folder-icon,\r\n\t\t.gallery-item .file-icon {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: var(--container-size);\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t\tfont-size: 40px;\r\n\t\t}\r\n\r\n\t\t.gallery-item .folder-icon {\r\n\t\t\tcolor: var(--primary-color);\r\n\t\t\tbackground-color: var(--muted-color);\r\n\t\t}\r\n\r\n\t\t.gallery-item .file-icon {\r\n\t\t\tcolor: var(--secondary-color);\r\n\t\t\tbackground-color: var(--secondary-color);\r\n\t\t}\r\n\r\n\t\t.item-info {\r\n\t\t\tpadding: 2px 4px 4px 4px;\r\n\t\t}\r\n\r\n\t\t.item-name {\r\n\t\t\tfont-weight: bold;\r\n\t\t\toverflow: hidden;\r\n\t\t\ttext-overflow: ellipsis;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tfont-size: 13px;\r\n\t\t}\r\n\r\n\t\t.item-size {\r\n\t\t\tfont-size: 0.7rem;\r\n\t\t\tcolor: #777;\r\n\t\t}\r\n\r\n\t\t.file-viewer {\r\n\t\t\tbackground-color: var(--card-background);\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t\toverflow: hidden;\r\n\t\t\tpadding: 8px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t\trow-gap: 8px;\r\n\t\t}\r\n\r\n\t\t.file-viewer img,\r\n\t\t.file-viewer video,\r\n\t\t.file-viewer audio {\r\n\t\t\tmax-width: 100%;\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin: 0 auto;\r\n\t\t}\r\n\r\n\t\t.file-actions {\r\n\t\t\tdisplay: flex;\r\n\t\t\tgap: 4px;\r\n\t\t}\r\n\r\n\t\t.btn {\r\n\t\t\tpadding: 4px 8px;\r\n\t\t\tbackground-color: var(--secondary-color);\r\n\t\t\tcolor: var(--background-color);\r\n\t\t\tborder: none;\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t\tcursor: pointer;\r\n\t\t\ttext-decoration: none;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tfont-size: 12px;\r\n\t\t\tcolor: var(--background-color);\r\n\t\t\ttransition: var(--transition-duration);\r\n\t\t}\r\n\r\n\t\t.btn:hover {\r\n\t\t\tbackground-color: var(--primary-color);\r\n\t\t}\r\n\r\n\t\t/* Lightbox styles */\r\n\t\t.lightbox {\r\n\t\t\tdisplay: none;\r\n\t\t\tposition: fixed;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.9);\r\n\t\t\tz-index: 1000;\r\n\t\t\topacity: 0;\r\n\t\t\ttransition: opacity 0.3s ease;\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t}\r\n\r\n\t\t.lightbox.open {\r\n\t\t\tdisplay: flex;\r\n\t\t\topacity: 1;\r\n\t\t\tjustify-content: center;\r\n\t\t\talign-items: center;\r\n\t\t}\r\n\r\n\t\t.lightbox-content {\r\n\t\t\tposition: relative;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\talign-items: center;\r\n\t\t\ttext-align: center;\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t}\r\n\r\n\t\t.lightbox-image {\r\n\t\t\tmax-width: 100%;\r\n\t\t\tmax-height: 100vh;\r\n\t\t\twidth: auto;\r\n\t\t\theight: auto;\r\n\t\t\tobject-fit: contain;\r\n\t\t}\r\n\r\n\t\t.lightbox-controls {\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 20px;\r\n\t\t\tleft: 0;\r\n\t\t\tright: 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\tgap: 20px;\r\n\t\t\tcolor: var(--background-color)\r\n\t\t}\r\n\r\n\t\t.lightbox-count {\r\n\t\t\tcolor: var(--background-color);\r\n\t\t\tfont-size: 12px;\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\t\tpadding: 2px 6px;\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t}\r\n\r\n\t\t.lightbox-close {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 8px;\r\n\t\t\tright: 8px;\r\n\t\t\tcolor: var(--background-color);\r\n\t\t\tfont-size: 20px;\r\n\t\t\tcursor: pointer;\r\n\t\t\tz-index: 1010;\r\n\t\t\twidth: 28px;\r\n\t\t\theight: 28px;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t}\r\n\r\n\t\t.lightbox-nav {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 50%;\r\n\t\t\twidth: 28px;\r\n\t\t\theight: 28px;\r\n\t\t\ttransform: translateY(-50%);\r\n\t\t\tcursor: pointer;\r\n\t\t\tcolor: var(--background-color);\r\n\t\t\tfont-size: 20px;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\t\tborder-radius: var(--border-radius);\r\n\t\t\tz-index: 1010;\r\n\t\t\ttransition: all 0.2s ease;\r\n\t\t}\r\n\r\n\t\t.lightbox-nav:hover {\r\n\t\t\tbackground-color: rgba(255, 255, 255, 0.2);\r\n\t\t}\r\n\r\n\t\t.lightbox-prev {\r\n\t\t\tleft: 20px;\r\n\t\t}\r\n\r\n\t\t.lightbox-next {\r\n\t\t\tright: 20px;\r\n\t\t}\r\n\r\n\t\t@media (max-width: 768px) {\r\n\r\n\t\t\t.lightbox-prev,\r\n\t\t\t.lightbox-next {\r\n\t\t\t\tdisplay: none !important;\r\n\t\t\t}\r\n\r\n\t\t\t.gallery {\r\n\t\t\t\tgrid-template-columns: repeat(auto-fill, minmax(var(--container-size), 1fr));\r\n\t\t\t}\r\n\t\t}\r\n\t</style><script defer>\r\n\t\tdocument.addEventListener('DOMContentLoaded', () => {\r\n\t\t\t// Intersection Observer for lazy loading images\r\n\t\t\tconst observerOptions = {\r\n\t\t\t\troot: null,\r\n\t\t\t\trootMargin: '0px',\r\n\t\t\t\tthreshold: 0.1\r\n\t\t\t};\r\n\r\n\t\t\tconst observer = new IntersectionObserver((entries, observer) => {\r\n\t\t\t\tentries.forEach(entry => {\r\n\t\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\t\tentry.target.classList.add('gallery-item-visible');\r\n\r\n\t\t\t\t\t\tconst lazyImage = entry.target.querySelector('img[loading=\"lazy\"]');\r\n\t\t\t\t\t\tif (lazyImage && lazyImage.dataset.src) {\r\n\t\t\t\t\t\t\tlazyImage.src = lazyImage.dataset.src;\r\n\t\t\t\t\t\t\t// Remove the data-src attribute to avoid loading it again\r\n\t\t\t\t\t\t\tlazyImage.removeAttribute('data-src');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tentry.target.classList.remove('gallery-item-visible');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}, observerOptions);\r\n\r\n\t\t\tconst galleryItems = document.querySelectorAll('.gallery-item');\r\n\t\t\tgalleryItems.forEach(item => observer.observe(item));\r\n\r\n\t\t\t// Lightbox\r\n\t\t\tconst lightbox = document.querySelector('.lightbox');\r\n\t\t\tconst lightboxContent = document.querySelector('.lightbox-content');\r\n\t\t\tconst lightboxImage = document.querySelector('.lightbox-image');\r\n\t\t\tconst lightboxClose = document.querySelector('.lightbox-close');\r\n\t\t\tconst lightboxPrev = document.querySelector('.lightbox-prev');\r\n\t\t\tconst lightboxNext = document.querySelector('.lightbox-next');\r\n\t\t\tconst lightboxCount = document.querySelector('.lightbox-count');\r\n\r\n\t\t\tlet currentIndex = 0;\r\n\t\t\tlet galleryImages = [];\r\n\r\n\t\t\t// Find all gallery images\r\n\t\t\tfunction refreshGalleryImages() {\r\n\t\t\t\tgalleryImages = Array.from(document.querySelectorAll('.gallery-item a'))\r\n\t\t\t\t\t.filter(item => item.querySelector('img'))\r\n\t\t\t\t\t.map(item => ({\r\n\t\t\t\t\t\tsrc: item.querySelector('img').src.replace('/raw/', '/raw/'),\r\n\t\t\t\t\t\talt: item.querySelector('img').alt,\r\n\t\t\t\t\t\telement: item\r\n\t\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t// Open lightbox with specific image\r\n\t\t\tfunction openLightbox(index) {\r\n\t\t\t\tif (galleryImages.length === 0) return;\r\n\r\n\t\t\t\tcurrentIndex = index;\r\n\t\t\t\tlightboxImage.src = galleryImages[currentIndex].src;\r\n\t\t\t\tlightboxImage.alt = galleryImages[currentIndex].alt;\r\n\t\t\t\tlightboxCount.textContent = `${currentIndex + 1} / ${galleryImages.length}`;\r\n\r\n\t\t\t\t// Show or hide navigation based on number of images\r\n\t\t\t\tif (galleryImages.length <= 1) {\r\n\t\t\t\t\tlightboxPrev.style.display = 'none';\r\n\t\t\t\t\tlightboxNext.style.display = 'none';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlightboxPrev.style.display = 'flex';\r\n\t\t\t\t\tlightboxNext.style.display = 'flex';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlightbox.classList.add('open');\r\n\t\t\t\tdocument.body.style.overflow = 'hidden'; // Prevent scrolling\r\n\t\t\t}\r\n\r\n\t\t\tfunction closeLightbox() {\r\n\t\t\t\tlightbox.classList.remove('open');\r\n\t\t\t\tdocument.body.style.overflow = ''; // Re-enable scrolling\r\n\t\t\t}\r\n\r\n\t\t\tfunction prevImage() {\r\n\t\t\t\tcurrentIndex = (currentIndex - 1 + galleryImages.length) % galleryImages.length;\r\n\t\t\t\tlightboxImage.src = galleryImages[currentIndex].src;\r\n\t\t\t\tlightboxImage.alt = galleryImages[currentIndex].alt;\r\n\t\t\t\tlightboxCount.textContent = `${currentIndex + 1} / ${galleryImages.length}`;\r\n\t\t\t}\r\n\r\n\t\t\tfunction nextImage() {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % galleryImages.length;\r\n\t\t\t\tlightboxImage.src = galleryImages[currentIndex].src;\r\n\t\t\t\tlightboxImage.alt = galleryImages[currentIndex].alt;\r\n\t\t\t\tlightboxCount.textContent = `${currentIndex + 1} / ${galleryImages.length}`;\r\n\t\t\t}\r\n\r\n\t\t\t// event delegation for gallery image clicks\r\n\t\t\tdocument.addEventListener('click', (e) => {\r\n\t\t\t\t// Find if click is on gallery image or its ancestor\r\n\t\t\t\tconst galleryItemLink = e.target.closest('.gallery-item a');\r\n\t\t\t\tif (galleryItemLink && galleryItemLink.querySelector('img')) {\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\trefreshGalleryImages();\r\n\t\t\t\t\tconst clickedIndex = galleryImages.findIndex(item => item.element === galleryItemLink);\r\n\r\n\t\t\t\t\tif (clickedIndex !== -1) {\r\n\t\t\t\t\t\topenLightbox(clickedIndex);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handle single image viewer\r\n\t\t\t\tconst singleImage = e.target.closest('.lightbox-enabled');\r\n\t\t\t\tif (singleImage) {\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t// Create a temporary array with just this image\r\n\t\t\t\t\tgalleryImages = [{\r\n\t\t\t\t\t\tsrc: singleImage.src,\r\n\t\t\t\t\t\talt: singleImage.alt,\r\n\t\t\t\t\t\telement: singleImage\r\n\t\t\t\t\t}];\r\n\r\n\t\t\t\t\topenLightbox(0);\r\n\r\n\t\t\t\t\t// Hide navigation if only one image\r\n\t\t\t\t\tif (galleryImages.length <= 1) {\r\n\t\t\t\t\t\tlightboxPrev.style.display = 'none';\r\n\t\t\t\t\t\tlightboxNext.style.display = 'none';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlightboxPrev.style.display = 'flex';\r\n\t\t\t\t\t\tlightboxNext.style.display = 'flex';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Event listeners for lightbox controls\r\n\t\t\t// Close lightbox if clicked outside the image\r\n\t\t\tlightbox.addEventListener('click', (e) => {\r\n\t\t\t\tif (e.target === lightboxContent || e.target === lightboxClose) {\r\n\t\t\t\t\tcloseLightbox();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlightboxPrev.addEventListener('click', prevImage);\r\n\t\t\tlightboxNext.addEventListener('click', nextImage);\r\n\r\n\t\t\t// Keyboard navigation\r\n\t\t\tdocument.addEventListener('keydown', (e) => {\r\n\t\t\t\tif (!lightbox.classList.contains('open')) return;\r\n\r\n\t\t\t\tif (e.key === 'Escape') closeLightbox();\r\n\t\t\t\tif (e.key === 'ArrowLeft') prevImage();\r\n\t\t\t\tif (e.key === 'ArrowRight') nextImage();\r\n\t\t\t});\r\n\r\n\t\t\t// Swipe events for touch devices\r\n\t\t\tlet touchStartX = 0;\r\n\t\t\tlet touchEndX = 0;\r\n\r\n\t\t\tfunction handleSwipe() {\r\n\t\t\t\tif (touchEndX < touchStartX - 50) {\r\n\t\t\t\t\t// Swipe left, go to next image\r\n\t\t\t\t\tnextImage();\r\n\t\t\t\t} else if (touchEndX > touchStartX + 50) {\r\n\t\t\t\t\t// Swipe right, go to previous image\r\n\t\t\t\t\tprevImage();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlightbox.addEventListener('touchstart', (e) => {\r\n\t\t\t\ttouchStartX = e.changedTouches[0].screenX;\r\n\t\t\t});\r\n\r\n\t\t\tlightbox.addEventListener('touchend', (e) => {\r\n\t\t\t\ttouchEndX = e.changedTouches[0].screenX;\r\n\t\t\t\thandleSwipe();\r\n\t\t\t});\r\n\t\t});\r\n\t</script></head><body><main class=\"container\"><!-- Breadcrumb navigation --><h1 class=\"breadcrumb\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for i, crumb := range breadcrumbs {
			if i == len(breadcrumbs)-1 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(crumb.Name)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templviews/layout.templ`, Line: 484, Col: 21}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<a href=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 templ.SafeURL
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinURLErrs(templ.SafeURL("/web/" + crumb.Path))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templviews/layout.templ`, Line: 486, Col: 48}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(crumb.Name)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templviews/layout.templ`, Line: 486, Col: 63}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "&nbsp;/&nbsp;</a>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</h1>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</main><!-- Lightbox container --><div class=\"lightbox\"><div class=\"lightbox-close\">✕</div><div class=\"lightbox-nav lightbox-prev\">❮</div><div class=\"lightbox-nav lightbox-next\">❯</div><div class=\"lightbox-content\"><img class=\"lightbox-image\" src=\"\" alt=\"\"><div class=\"lightbox-controls\"><div class=\"lightbox-count\">1 / ...</div></div></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
